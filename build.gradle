plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "org.asciidoctor.jvm.convert" version "3.3.2"

}

group = 'com.hunmuk'
version = '0.0.1-SNAPSHOT'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    asciidoctorExt
}

repositories {
    mavenCentral()
}


configurations {
    asciidoctorExt
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //implementation group: 'org.springframework.restdocs', name: 'spring-restdocs-asciidoctor', version: '3.0.1'
    asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor"
    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    // https://mvnrepository.com/artifact/org.springframework.restdocs/spring-restdocs-mockmvc
    //testImplementation group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '3.0.1'


    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

// gradle clean 시에 QClass 디렉토리 삭제
clean {	delete file('src/main/generated')}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    dependsOn asciidoctor

    copy {
            //println ">>>>> asciidoctor.outputDir : ${asciidoctor.outputDir}"
            from asciidoctor.outputDir
            into 'src/main/resources/static/docs'
    }
   /* from ("${asciidoctor.outputDir}/html5") {
        println ">>>>> asciidoctor.outputDir : ${asciidoctor.outputDir}"
        into 'static/docs'
    }*/
}
